# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import connection_pb2 as connection__pb2


class ConnectionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RequestUserId = channel.unary_unary(
        '/connection_grpc.ConnectionService/RequestUserId',
        request_serializer=connection__pb2.Empty.SerializeToString,
        response_deserializer=connection__pb2.RequestUserIdResponse.FromString,
        )
    self.Connection = channel.unary_unary(
        '/connection_grpc.ConnectionService/Connection',
        request_serializer=connection__pb2.ConnectionRequest.SerializeToString,
        response_deserializer=connection__pb2.ConnectionResponse.FromString,
        )
    self.Auth = channel.unary_unary(
        '/connection_grpc.ConnectionService/Auth',
        request_serializer=connection__pb2.AuthRequest.SerializeToString,
        response_deserializer=connection__pb2.AuthResponse.FromString,
        )
    self.WaitAuth = channel.stream_stream(
        '/connection_grpc.ConnectionService/WaitAuth',
        request_serializer=connection__pb2.WaitAuthRequest.SerializeToString,
        response_deserializer=connection__pb2.WaitAuthResponse.FromString,
        )


class ConnectionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RequestUserId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Connection(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Auth(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WaitAuth(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ConnectionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RequestUserId': grpc.unary_unary_rpc_method_handler(
          servicer.RequestUserId,
          request_deserializer=connection__pb2.Empty.FromString,
          response_serializer=connection__pb2.RequestUserIdResponse.SerializeToString,
      ),
      'Connection': grpc.unary_unary_rpc_method_handler(
          servicer.Connection,
          request_deserializer=connection__pb2.ConnectionRequest.FromString,
          response_serializer=connection__pb2.ConnectionResponse.SerializeToString,
      ),
      'Auth': grpc.unary_unary_rpc_method_handler(
          servicer.Auth,
          request_deserializer=connection__pb2.AuthRequest.FromString,
          response_serializer=connection__pb2.AuthResponse.SerializeToString,
      ),
      'WaitAuth': grpc.stream_stream_rpc_method_handler(
          servicer.WaitAuth,
          request_deserializer=connection__pb2.WaitAuthRequest.FromString,
          response_serializer=connection__pb2.WaitAuthResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'connection_grpc.ConnectionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
